# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
        django-version: ["2.2", "3.0"]
    name: test-py${{ matrix.python-version }}-dj${{ matrix.django-verson }}

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
     - run: pip install nox
     - uses: abatilo/actions-poetry@v2.0.0
       with:
         poetry-version: 1.1.13x
     - uses: actions/cache@v3
       with:
         path: ~/.nox
         key: ${{ matrix.os }}-${{ matrix.python-version }}-nox-${{ hashFiles('**/pyproject.toml') }}
         restore-keys: |
           ${{ matrix.os }}-${{ matrix.python-version }}-nox-
     - name: Run tests
       run: nox -s "tests(django='${{ matrix.django-version }}')" --python ${{ matrix.python-version }} -r
     - uses: codecov/codecov-action@v2
       with:
         name: test-py${{ matrix.python-version }}-${{ matrix.os }}
         
  lint:
    strategy:
      matrix:
        check: [ "types", "formatting" ]
    runs-on: ubuntu-latest
    name: Lint
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: 3.8
          architecture: x64
      - run: pip install nox
      - uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.1.13
      - uses: actions/cache@v3
        with:
          path: ~/.nox
          key: ${{ runner.os }}-${{ runner.python-version }}-nox-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-${{ runner.python-version }}-nox-
      - run: nox -s ${{ matrix.check }} -r
